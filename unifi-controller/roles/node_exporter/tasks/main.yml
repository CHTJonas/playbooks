---
- name: Create node_exporter group
  group:
    name: node_exporter
    state: present
    system: yes

- name: Create node_exporter user
  user:
    name: node_exporter
    group: node_exporter
    state: present
    create_home: no
    shell: /usr/sbin/nologin
    system: yes

- name: Check that the node_exporter binary exists
  stat:
    path: /usr/local/bin/node_exporter
  register: stat_result

- name: Download the node_exporter binary if necessary
  shell: "curl -sSL -o /tmp/node_exporter-0.18.1.linux-amd64.tar.gz https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz"
  when: stat_result.stat.exists == False

- name: Extract the node_exporter binary if necessary
  shell: "cd /tmp && tar -xzf /tmp/node_exporter-0.18.1.linux-amd64.tar.gz"
  when: stat_result.stat.exists == False

- name: Install the node_exporter binary if necessary
  shell: "mv /tmp/node_exporter-0.18.1.linux-amd64/node_exporter /usr/local/bin/node_exporter && rm -rf /tmp/node_exporter-0.18.1.linux-amd64.tar.gz /tmp/node_exporter-0.18.1.linux-amd64"
  when: stat_result.stat.exists == False

- name: Set executable bit on the node_exporter binary if necessary
  file:
    path: /usr/local/bin/node_exporter
    owner: root
    group: root
    mode: 0755
  when: stat_result.stat.exists == False

- name: Install node_exporter service definition
  copy:
    src: node_exporter.service
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: '0644'

- name: Ensure node_exporter service starts at boot
  systemd:
    name: node_exporter
    state: started
    enabled: yes
    masked: no
    daemon_reload: yes

- name: Open default node_exporter firewall port
  ufw:
    rule: allow
    port: '9100'