---
- name: Install Knot signing key
  ansible.builtin.get_url:
    url: https://deb.knot-dns.cz/apt.gpg
    dest: /etc/apt/keyrings/knot.gpg

- name: Install Knot repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/knot.gpg] https://deb.knot-dns.cz/knot-latest/ {{ ansible_distribution_release }} main"
    filename: knot

- name: Install Knot server and utilities
  ansible.builtin.apt:
    install_recommends: no
    update_cache: yes
    pkg:
      - knot
      - knot-dnsutils

- name: Install knot config file
  ansible.builtin.copy:
    src: knot.conf
    dest: /etc/knot/knot.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart Knot

- name: Enable and start systemd unit
  ansible.builtin.systemd:
    daemon_reload: yes
    name: knot.service
    state: started
    enabled: yes
    masked: no

- name: Install Knot firewall rule
  ansible.builtin.copy:
    src: knot-nft.conf
    dest: /etc/nftables/knot.conf
    owner: root
    group: root
    mode: 0755
  notify: Reload nftables

- name: Install DNS maintenance scripts
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/scripts/
    owner: root
    group: root
    mode: 0755
  with_items:
    - update-latham-ddns
    - update-old-vic-ddns

- name: Install systemd service file
  ansible.builtin.copy:
    src: dns-maint.service
    dest: /etc/systemd/system/dns-maint.service
    owner: root
    group: root
    mode: 0644

- name: Install systemd timer file
  ansible.builtin.copy:
    src: dns-maint.timer
    dest: /etc/systemd/system/dns-maint.timer
    owner: root
    group: root
    mode: 0644

- name: Enable and start systemd timer
  ansible.builtin.systemd:
    daemon_reload: yes
    name: dns-maint.timer
    state: started
    enabled: yes
    masked: no

- name: Install DS record management scripts
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/scripts/
    owner: root
    group: root
    mode: 0755
  with_items:
    - check-cds-rrsets
    - check-ds-rrsets

- name: Create cron symlinks for DS record management scripts
  ansible.builtin.file:
    src: "/usr/local/scripts/{{ item }}"
    dest: "/etc/cron.daily/{{ item }}"
    state: link
    owner: root
    group: root
    mode: 0755
  with_items:
    - check-cds-rrsets
    - check-ds-rrsets

- name: Download mc executable (amd64)
  ansible.builtin.get_url:
    url: https://dl.xjupiter.net/binaries/mc-latest-amd64
    dest: /usr/local/bin/mc
    force: yes
    owner: root
    group: root
    mode: 0755
  when: ansible_architecture == 'x86_64'

- name: Download mc executable (arm64)
  ansible.builtin.get_url:
    url: https://dl.xjupiter.net/binaries/mc-latest-arm64
    dest: /usr/local/bin/mc
    force: yes
    owner: root
    group: root
    mode: 0755
  when: ansible_architecture == 'aarch64'

- name: Create mc config directory
  ansible.builtin.file:
    path: /root/.mc
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Add mc config file
  ansible.builtin.template:
    src: config.json.j2
    dest: /root/.mc/config.json
    owner: root
    group: root
    mode: 0600

- name: Install DNS backup script
  ansible.builtin.copy:
    src: backup-dns
    dest: /usr/local/scripts/backup-dns
    owner: root
    group: root
    mode: 0755

- name: Create cron symlinks for DNS backup script
  ansible.builtin.file:
    src: /usr/local/scripts/backup-dns
    dest: /etc/cron.daily/backup-dns
    state: link
    owner: root
    group: root
    mode: 0755
